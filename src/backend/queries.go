//go:build ignore
// +build ignore

package main

import (
	"bytes"
	"fmt"
	"io/fs"
	"os"
	"path/filepath"
	"strings"
)

const (
	sourceDir = "../sql"
	outputFile = "queries_gen.go"
)

func main() {
	var buffer bytes.Buffer
	buffer.WriteString("// Code generated by queries.go; DO NOT EDIT.\n")
	buffer.WriteString("package main\n\n")
	buffer.WriteString("var queries = map[string]string{\n")

	err := filepath.WalkDir(sourceDir, func(path string, d fs.DirEntry, err error) error {
		if err != nil {
			return err
		}
		if d.IsDir() {
			return nil
		}

		relPath, err := filepath.Rel(sourceDir, path)
		if err != nil {
			return err
		}

		if err != nil {
			return err
		}

		contentBytes, err := os.ReadFile(path)
		if err != nil {
			return err
		}

		content := string(contentBytes)
		name := strings.TrimSuffix(relPath, filepath.Ext(relPath))

		buffer.WriteString(fmt.Sprintf("\t\"%s\": `%s`,\n", name, content))

		return nil
	})
	
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error walking the path: %v\n", err)
		os.Exit(1)
	}

	buffer.WriteString("}\n")

	err = os.WriteFile(outputFile, buffer.Bytes(), 0644)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error writing generated file: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("Successfully generated", outputFile)
}
